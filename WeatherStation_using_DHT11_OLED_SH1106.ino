#include "U8glib.h"
#include "DHT.h"
#include "Talkie.h"
#include "Vocab_US_Clock.h"
#include "DS3231.h"

#define DHTPIN 2 
#define DHTTYPE DHT22

U8GLIB_SH1106_128X64 u8g(U8G_I2C_OPT_NONE);
DHT dht(DHTPIN, DHTTYPE); 
DS3231  rtc(SDA, SCL);
Talkie voice;

const uint8_t Welcome_Morning[] PROGMEM = {0x00,0x0A,0x6B,0x59,0xC3,0xCC,0xDD,0x06,0x25,0x1B,0xAE,0xAC,0x74,0x9D,0x94,0xE0,0x6C,0xF2,0x4A,0x55,0x51,0xA2,0xD5,0xCE,0x77,0xC7,0x49,0xF1,0x3E,0xA6,0xD6,0x1C,0x29,0xC5,0x5A,0xAF,0x6A,0xA4,0x8D,0x40,0xE4,0xB6,0xDA,0xDD,0xB1,0x50,0x49,0xE9,0x0C,0x76,0x29,0x46,0xE3,0x31,0xDB,0x22,0x61,0x3A,0x4D,0xFA,0xCC,0xF0,0x62,0x18,0x34,0xD3,0x52,0xC2,0xD3,0x71,0x50,0xFD,0x36,0xAA,0x8C,0xC4,0x41,0xF1,0x47,0xB9,0x33,0x63,0x25,0x31,0x1C,0x71,0xAF,0x72,0x94,0xF8,0x54,0xB5,0x24,0x87,0x73,0x01,0x73,0xE6,0x91,0x4C,0x55,0x05,0x2C,0x81,0x3A,0x2C,0x99,0x3A,0xD0,0x24,0x6F,0x63,0x4B,0x1A,0x34,0x6B,0xB3,0xDB,0x25,0x76,0xB1,0x93,0xD4,0x19,0x17,0xD7,0xC9,0x4F,0x52,0x77,0x43,0x5D,0x87,0x30,0x73,0x9D,0x35,0x4D,0xE5,0xA2,0xC4,0x6D,0x43,0xA3,0xA6,0x8A,0xBD,0xAA,0x15,0x8F,0x58,0x2C,0x96,0xB1,0x52,0x53,0x1D,0x93,0x58,0xDA,0x2E,0x31,0x4D,0x84,0x62,0xC3,0x3D,0x2D,0x2D,0x26,0x8A,0x23,0x97,0x30,0x97,0xD8,0x28,0xCE,0xD2,0x2C,0xCC,0x15,0x01,0x00,0x00,0x00,0x00,0x20,0x8D,0xCD,0x65,0xA7,0x74,0x84,0x34,0xF6,0x9D,0x4D,0x43,0x36,0x53,0xF9,0x53,0xCD,0x74,0x58,0x4E,0xD6,0xD5,0xCB,0x87,0x2D,0x25,0x29,0x49,0x99,0x58,0x31,0x55,0xF8,0x22,0x68,0xBB,0x44,0x52,0xE1,0xB3,0x90,0x9D,0x10,0xCA,0x45,0x8C,0xC6,0xB6,0x9B,0x25,0x25,0x29,0x79,0xDE,0x38,0x8E,0x1D,0xD4,0x9C,0x68,0xE4,0x38,0x56,0x30,0x4A,0xC6,0xE1,0xA7,0xC6,0xC1,0xCE,0x11,0x87,0x9F,0x63,0x3B,0x27,0x3A,0x5A,0x6F,0x57,0x4C,0x5C,0x16,0x2B,0x86,0xC5,0x89,0x71,0xA6,0x0E,0xB5,0x60,0x27,0xC9,0xC9,0x2C,0x22,0xC7,0x1C,0x17,0x37,0x06,0xCF,0x2A,0x53,0xDC,0xBC,0x9C,0xAD,0xB2,0x55,0x55,0xF3,0x4A,0xB4,0x8A,0x16,0x47,0xCD,0xAF,0x46,0x2B,0x52,0x5D,0x27,0x3F,0x2B,0x9D,0x76,0x4D,0xE5,0xFC,0x60,0x7C,0x9B,0x2D,0x96,0xF2,0x45,0xA8,0x56,0x97,0x58,0xC6,0xB7,0x3A,0x2B,0x5D,0x15,0x25,0x3F,0x49,0x9F,0x4D,0x75,0x55,0xBC,0x2C,0x65,0x26,0x2C,0x55,0x73,0xAA,0x92,0xEE,0x54,0x57,0xCD,0x6A,0x46,0x2A,0x4B,0x12,0x37,0xBD,0x7A,0x4D,0x2F,0xAA,0xD6,0xD4,0x52,0x34,0x32,0xA9,0x6E,0x51,0x72,0x95,0xA8,0x94,0xD8,0x4E,0x35,0x49,0xA3,0x23,0x69,0x29,0x43,0x65,0xAD,0x9A,0x84,0xE1,0x1C,0x95,0xBC,0x2A,0x8B,0x56,0xF2,0xA3,0xB5,0xAA,0x56,0xC7,0x29,0xCA,0x46,0x33,0x87,0xE2,0x84,0x38,0x1B,0xAD,0x6A,0xAA,0xEB,0x92,0x68,0xAD,0x33,0x38,0xB1,0x4A,0xB2,0xE4,0xC9,0x64,0x25,0xE8,0xEA,0x8E,0xC4,0x2B,0x2C,0x03,0x28,0x64,0xA6,0xF0,0x08,0x75,0xA2,0x80,0x55,0x5D,0x09,0xB0,0xA3,0x09,0x00,0x00,0x00,0x00,0x00,0xD2,0xD9,0x4B,0x76,0x0D,0x59,0x4C,0x13,0x4F,0xB5,0x3A,0x19,0x04,0xCD,0x0F,0xB1,0xDC,0xD4,0x5C,0xD4,0x58,0xD5,0x62,0xD5,0x71,0x93,0x63,0x33,0xEF,0xE5,0xD8,0x45,0x88,0xAD,0x64,0x9A,0x6D,0x27,0x2E,0xEE,0xA2,0x29,0x8D,0xE2,0xC0,0x78,0x84,0xDF,0xD9,0x9A,0x00,0x43,0x53,0xDC,0x66,0xAB,0x08,0x0C,0xB6,0xC8,0x3A,0x62,0x2B,0xA4,0xEE,0x54,0xAB,0x70,0xEC,0xC0,0x3A,0x5D,0xB4,0xC2,0x49,0x02,0x63,0xB2,0xF4,0xE6,0xD8,0x09,0x0C,0xC5,0x3D,0x33,0x1C,0x3B,0xD0,0x86,0x88,0x94,0xA1,0xEB,0x40,0x99,0x22,0x43,0x42,0x9A,0x01,0x59,0x1D,0x17,0xB3,0x38,0x46,0xEE,0xCC,0x4D,0x53,0xDD,0x24,0x60,0x87,0x8A,0xA4,0x27,0x11,0xE1,0x51,0xAA,0x83,0x11,0xAB,0xB8,0x4F,0x70,0x4A,0x4E,0x1C,0xEA,0xBE,0xC1,0x29,0xB9,0x69,0x9A,0xDB,0x05,0xC7,0xE4,0xA5,0x69,0x29,0xEB,0xAC,0x92,0x9F,0x96,0x96,0x9C,0x29,0x0A,0x7E,0x5A,0x3C,0xB2,0x6A,0xCB,0x05,0x79,0xF2,0xD0,0x89,0x4A,0x13,0xE4,0xC1,0x4B,0xAF,0x1A,0x54,0x94,0xBB,0x0C,0xF7,0x70,0x54,0x7E,0xEE,0xDE,0x52,0xAD,0x28,0x79,0x79,0x5B,0xF8,0xBA,0xE2,0xE4,0xE4,0xAD,0x99,0x4B,0x71,0x8A,0x9D,0x97,0x66,0x2E,0x46,0x6D,0x66,0x1E,0x5A,0x39,0x58,0x77,0x18,0xB9,0x58,0xC5,0x70,0xEC,0xA6,0xE5,0x60,0x9D,0x4D,0x89,0x9B,0x96,0x8D,0x76,0x96,0xC4,0x2E,0x5A,0x51,0xDC,0xD5,0x1A,0xA7,0xE8,0x45,0x49,0x55,0x8B,0x9D,0x62,0x64,0xA7,0xE5,0x47,0x71,0x8A,0x99,0xA2,0x85,0x3F,0x3B,0x4E,0x76,0xC8,0x16,0x7E,0xAA,0x2A,0x38,0xBE,0x98,0xFB,0x25,0x4A,0xE7,0x9A,0xEC,0x91,0x9D,0x8C,0x95,0xEB,0x74,0x54,0x97,0x4B,0x06,0x01,0x4C,0x95,0x1E,0x80,0xE3,0x43,0x05,0x70,0xDB,0xA6,0x00,0x6E,0xDB,0x34,0x60,0x46,0x52,0x9B,0x62,0x3B,0x80,0x95,0xD0,0x6C,0xB0,0xED,0x04,0x36,0x4A,0xB5,0xCD,0xB2,0x13,0xD8,0x38,0xF6,0x26,0xDB,0x76,0x60,0x12,0xB2,0x15,0x42,0x1B,0x29,0x41,0x44,0x95,0x9B,0x22,0x40,0x61,0x93,0xEE,0xA6,0xD6,0x58,0x85,0x2D,0x74,0x64,0x88,0x6C,0xE3,0x96,0x50,0x1E,0xA2,0x4E,0x9C,0x1F,0x07,0x37,0x67,0x28,0x4E,0x41,0x1A,0x5A,0xB2,0xAE,0xB2,0x44,0x69,0x78,0xEA,0x99,0xE3,0x12,0xA5,0xE6,0x69,0xA7,0x8A,0x53,0x94,0xB2,0x97,0xAF,0xA8,0x0A,0x51,0x08,0x5E,0x91,0x9C,0x84,0xC5,0xD6,0x54,0x54,0xA8,0x22,0x30,0xC0,0x53,0x19,0x06,0xF8,0xED,0x3C,0x84,0x03,0x69,0x4C,0xB5,0xE4,0x10,0x45,0xA3,0x35,0xAD,0xAE,0x53,0x9C,0xAD,0x56,0x8D,0x38,0x4E,0x71,0x71,0x9A,0xB1,0xEC,0x38,0x24,0xC5,0x6B,0xF9,0xB0,0x23,0x97,0x64,0x6B,0x65,0xC5,0xAA,0x45,0x52,0x0D,0xA7,0x85,0xCB,0x41,0xF5,0x70,0x26,0xAE,0x6E,0x1B,0x00,0x10,0x32,0x6C,0x5A,0x99,0x3B,0x31,0xC0,0x72,0x69,0x02,0xD8,0x39,0x0A,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x1E,0xD0,0x65};
const uint8_t Point[] PROGMEM = {0x00,0x24,0xCC,0x2A,0x55,0xDC,0x2D,0x8B,0xB8,0xE8,0x2D,0xB7,0x94,0x2D,0x34,0x57,0x96,0xCD,0x33,0xB1,0xD3,0x7D,0x5D,0xD2,0xA8,0x4E,0x41,0x0F,0x63,0xC9,0x24,0x16,0x27,0x23,0xCE,0xE1,0x30,0x8F,0x5C,0xCC,0xDC,0x93,0xDD,0xC3,0x71,0xB1,0x4B,0x52,0x8D,0x0A,0x55,0xC5,0x4D,0xCA,0x3B,0xDB,0x15,0x85,0x20,0xCA,0xDC,0x0A,0x73,0x65,0x22,0x6F,0x7A,0x5D,0x32,0xA1,0x8A,0x83,0xCC,0x4D,0xD1,0x96,0x24,0x55,0xBA,0xDA,0xD5,0x6C,0xA3,0x2F,0x0B,0xF2,0x34,0x8F,0xC4,0xD0,0xA1,0xCD,0xDC,0xD4,0x91,0x41,0x87,0x71,0xD3,0x74,0x36,0x2C,0x9F,0x29,0x8C,0x32,0x24,0x01,0x00,0x00,0x00,0x3C,0xA0,0xCB};
const uint8_t currentTemp[] PROGMEM = {0x00,0xE6,0x6F,0x3A,0xCC,0x3D,0xDC,0x24,0x33,0x79,0x8D,0x3C,0x8E,0x52,0xCC,0xEC,0x35,0xFC,0xC4,0x71,0xB2,0xA2,0xD5,0xF4,0x71,0xD5,0xC4,0x4E,0x5A,0x3D,0xB3,0x65,0x83,0x1B,0x5A,0xAF,0x48,0xB7,0xC4,0x6E,0x68,0xB5,0xDC,0xDD,0x9D,0xB8,0xA5,0xE7,0xCE,0x70,0x77,0x62,0xC0,0x5A,0xCC,0x54,0xD2,0x91,0x03,0x63,0xA6,0xE5,0x0E,0xD6,0x8E,0x4B,0x85,0x96,0xCE,0x78,0x3A,0x30,0x0F,0x1A,0x5A,0xD3,0xE0,0xC0,0xDC,0x69,0x78,0x8C,0x63,0x02,0x73,0xE2,0x91,0x48,0x8E,0x8D,0x2B,0x5E,0x3A,0x2D,0xD4,0x14,0x29,0x5A,0xEB,0x09,0x49,0x1A,0x54,0xE7,0xAA,0x3A,0x29,0x8E,0xD2,0x79,0xBB,0x94,0xE4,0x48,0xCC,0xE4,0x65,0x4B,0x4D,0x63,0x21,0xDD,0xF3,0xCA,0x32,0xB7,0x49,0xD0,0xA1,0xCA,0xC3,0xCD,0x69,0x00,0xB6,0x8E,0x74,0xC0,0x09,0x1E,0x01,0x98,0xDE,0xB5,0x28,0xD9,0x44,0x5A,0xB0,0x93,0x21,0x97,0xA0,0x51,0xCD,0x49,0x9A,0x98,0x93,0x66,0x16,0x47,0x0E,0xA0,0x77,0x16,0x61,0xC3,0x58,0x81,0x22,0x78,0x85,0x2F,0x23,0x04,0x72,0x5B,0xD9,0xB2,0xB2,0x40,0x80,0x45,0x85,0xBB,0x45,0x22,0x27,0x87,0xCA,0xAB,0x3D,0x8C,0x83,0x96,0x13,0x0E,0x5F,0x6A,0x4C,0x56,0x76,0xD4,0xBE,0xAE,0xCA,0x39,0x41,0x79,0x6E,0x05,0x6D,0x54,0x77,0xE0,0x9A,0x5E,0xB2,0x0C,0xF0,0x82,0xBB,0x03,0x7E,0xBB,0x0A,0xC0,0x6D,0x57,0x01,0xD8,0x51,0xC9,0x05,0xD1,0x49,0x4F,0xB4,0x2C,0x13,0xA6,0x40,0xEB,0x35,0x1C,0xCD,0x9F,0x23,0xAE,0xF6,0x70,0x34,0x51,0x8E,0xB8,0xDA,0xCD,0xD2,0x44,0x39,0xE0,0x58,0x15,0x4B,0x17,0x65,0x4B,0x93,0xD5,0xAC,0x42,0x94,0xB5,0x74,0x4D,0xB0,0x0E,0x51,0x56,0x92,0x3D,0xC1,0x3A,0x45,0x45,0x49,0xE4,0xB9,0xE2,0x14,0x15,0x2D,0x51,0x67,0x8A,0x53,0x9C,0x95,0x46,0x9D,0x2B,0x0A,0x6B,0x32,0x9A,0xB5,0xE2,0xC8,0xC4,0xC1,0x59,0xF5,0x88,0x63,0x11,0xAB,0x18,0xDD,0xCD,0x8E,0x59,0x12,0x44,0x45,0x77,0x30,0x62,0xC0,0x94,0xCE,0x08,0xD8,0xC1,0x1B,0x10,0xB0,0x43,0x0D,0x20,0x60,0x85,0x2E,0x04,0x4C,0xB7,0x89,0xC0,0x11,0x3B,0x29,0xDD,0x31,0x01,0x96,0x8F,0x44,0xC0,0xF4,0x55,0x00,0x00,0x00,0x00,0x0F,0xE8,0x32};
const uint8_t currentHumidity[] PROGMEM = {0x00,0xEE,0x6B,0xC6,0x2D,0xDC,0x9D,0x14,0x33,0x79,0x8D,0x3C,0x8E,0xD2,0xCC,0xEC,0x34,0xFC,0xC5,0x71,0xB2,0x92,0xD5,0xB4,0x53,0xC5,0xCC,0x4E,0xCA,0x22,0xB2,0x64,0x83,0x89,0xEA,0xAC,0x48,0x77,0xDB,0x8E,0xAD,0xA5,0xC2,0xDD,0x9D,0x06,0xAA,0xE7,0xAE,0x70,0x77,0x62,0xC0,0xD6,0x32,0x9C,0xC3,0xB1,0x03,0x63,0xA6,0xD5,0x72,0x55,0x0E,0x4C,0x85,0x96,0x9E,0x3C,0x38,0x30,0x77,0x5A,0x3A,0x4A,0x19,0xA2,0x3C,0x70,0x68,0xD9,0x51,0x8A,0x72,0xE1,0xE1,0x36,0x55,0x0D,0x2C,0x5E,0xDA,0xD2,0x55,0x37,0x3E,0x1B,0xCF,0x0E,0x53,0x53,0xA4,0x60,0xAA,0x3A,0x24,0xB1,0x93,0x65,0xAA,0x0A,0x15,0xDB,0x46,0x95,0xA6,0xC7,0x98,0x63,0x19,0x2D,0x41,0xAB,0x4B,0xB1,0x63,0x80,0xCB,0x44,0x0D,0xF0,0x8D,0x99,0x31,0x22,0xEC,0x59,0x43,0x87,0xCE,0x0A,0xC2,0x6F,0x4D,0x54,0x06,0x3B,0x0A,0xBD,0x29,0x55,0x9D,0x1C,0x6B,0x7D,0x32,0x5D,0x95,0x71,0x45,0xCC,0xB1,0x6C,0x19,0xC6,0x95,0x2E,0xD7,0xB2,0x68,0x18,0x57,0xB8,0xDC,0xB0,0x62,0xE0,0x1C,0x65,0x73,0x3A,0xCC,0x66,0xB1,0x92,0x90,0x9E,0x96,0xC4,0x4D,0x4B,0x52,0x7B,0x47,0x13,0x17,0x25,0x6A,0x9F,0x19,0x89,0x92,0xA4,0xA0,0xB3,0x67,0xC5,0x76,0x12,0x93,0x88,0x98,0x09,0x59,0x4D,0x8A,0xCA,0x6B,0xD7,0x64,0x16,0x25,0x6A,0xEB,0x5D,0xB7,0x95,0xB4,0xA8,0xAC,0xB7,0xD3,0x91,0x31,0xBD,0x8A,0x9A,0x12,0x45,0xCA,0x2D,0xC4,0x2D,0xDD,0x9D,0x04,0x2F,0x71,0xE9,0x6D,0x75,0x14,0xFC,0xCC,0x78,0x2E,0xC4,0xB1,0x0B,0x32,0xA3,0x39,0x53,0x27,0x2E,0xCC,0x94,0xE7,0x4C,0x1D,0xBB,0x30,0x33,0xDE,0x31,0x55,0x1C,0xC2,0x2C,0x78,0xB7,0x44,0x51,0x0A,0x93,0x94,0xDD,0x51,0x47,0x29,0xCA,0x52,0xAA,0x57,0x1C,0xA7,0xA8,0x28,0xC9,0x5A,0x75,0x5C,0xA2,0xA2,0x24,0xF2,0xC4,0x76,0x8A,0x8A,0x16,0xCF,0x13,0xC7,0x29,0xCE,0x5A,0xA3,0xCE,0x14,0x85,0x35,0x1A,0xCD,0x5E,0x55,0xE4,0x62,0xEF,0xAC,0x7B,0xD8,0xB6,0x4A,0xAC,0xF7,0xEA,0x21,0x47,0x22,0xF1,0xA2,0xB2,0x3A,0x28,0xB1,0x64,0x48,0x67,0xB1,0x74,0x8C,0x80,0xE3,0x23,0x11,0xB0,0x7D,0x14,0x02,0x76,0xCC,0x46,0xC0,0x4A,0xBB,0x00,0x28,0xEB,0x75,0x4C,0x42,0x1D,0x13,0x60,0xBA,0x76,0x04,0x2C,0xDF,0x05,0x00,0x00,0x00,0x00,0x0F,0xE8,0x32};
int speakCycle = 0;

void setup() {
  // Setup Serial connection
  Serial.begin(9600);
  
  // Initialize the rtc object
  rtc.begin();
  // Initialize the DHT sensor
  dht.begin(); 
  
  u8g.firstPage();  
  do {
    u8g.setFont(u8g_font_helvB10);  
    u8g.drawStr(0, 10, "Welcome to"); 
    u8g.drawStr(0, 30, "IoT Project");
    u8g.drawStr(0, 50, "Group: Dynamic");
  } while(u8g.nextPage());
 
  voice.say(Welcome_Morning);
  delay(1000);  
  
  Serial.print("Temperature");
  Serial.print(",");
  Serial.print("Humidity");
  Serial.println();
}
void loop() {
  float temp = dht.readTemperature();
  float hum = dht.readHumidity(); 
  // float heatIndex = dht.computeHeatIndex(temp, hum);
//  if (isnan(hum) || isnan(temp)) {
//    Serial.println("Failed to read from DHT sensor!");
//    return;
//  }
  
  Data2CSV(temp, hum);
  
  u8g.firstPage();  
  do {
    u8g.setFont(u8g_font_6x12);  
    displayTemp(temp);
    displayHumidity(hum);
//    displayHeatIndex(heatIndex);
    displayTime();
  } while(u8g.nextPage());
  
  if (speakCycle == 10) {
    speakCycle = 0;
    voice.say(currentTemp);
    speakTemperature(temp);
    voice.say(currentHumidity);
    speakHumidity(hum);
  }
  speakCycle++;
  delay(2000);
}

void displayTemp(float temp) {
  u8g.drawStr(0, 30, "Temperature:");  
  u8g.setPrintPos(75, 30);
  u8g.print(temp, 1);
  u8g.print((char)176);
  u8g.print("C");
}

void displayHumidity(float hum) {
  u8g.drawStr(0, 45, "Humidity:");
  u8g.setPrintPos(60, 45);
  u8g.print(hum, 1);
  u8g.print("%");
}

//void displayHeatIndex(float heatIndex) {
//  u8g.drawStr(0, 60, "Heat Index:");  
//  u8g.setPrintPos(70, 60);
//  u8g.print(heatIndex, 2);
//  u8g.print((char)176);
//  u8g.print("C");
//}

void displayTime() {
  Time t = rtc.getTime(); 
  String DOW = rtc.getDOWStr();

  // Display current clock time
  u8g.setFont(u8g_font_04b_03);
  u8g.setPrintPos(107, 5);
  u8g.print(t.hour);
  u8g.print(":");
  if (t.min < 10) {
    u8g.print(0); 
    u8g.print(t.min);
  }
  else u8g.print(t.min);
  
  // Display current day of the Week
  u8g.setPrintPos(0, 5);
  DOW.toUpperCase();
  u8g.print(DOW[0]);
  u8g.print(DOW[1]);
  u8g.print(DOW[2]);

  // Display current Callendar
  u8g.setPrintPos(20, 5);
  u8g.print(rtc.getDateStr());
}

void Data2CSV(float temp, float hum) {
  Serial.print(temp);
  Serial.print(",");
  Serial.print(hum);
  Serial.println();
}

void speakTemperature(float tempC) {
  int tempC_Int = (int)tempC;
//  Serial.println(tempC);
//  Serial.println(tempC_Int);
  float tempC_Frac = tempC - tempC_Int;
  int tempC_Frac2Int = (int) (tempC_Frac * 10);

  if (tempC_Int == 0) voice.say(spc_ZERO);
  else if (tempC_Int == 1) voice.say(spc_ONE);
  else if (tempC_Int == 2) voice.say(spc_TWO);
  else if (tempC_Int == 3) voice.say(spc_THREE);
  else if (tempC_Int == 4) voice.say(spc_FOUR);
  else if (tempC_Int == 5) voice.say(spc_FIVE);
  else if (tempC_Int == 6) voice.say(spc_SIX);
  else if (tempC_Int == 7) voice.say(spc_SEVEN);
  else if (tempC_Int == 8) voice.say(spc_EIGHT);
  else if (tempC_Int == 9) voice.say(spc_NINE);
  else if (tempC_Int == 10) voice.say(spc_TEN);
  else if (tempC_Int == 11) voice.say(spc_ELEVEN);
  else if (tempC_Int == 12) voice.say(spc_TWELVE);
  else if (tempC_Int == 13) voice.say(spc_THIRTEEN);
  else if (tempC_Int == 14) voice.say(spc_FOURTEEN);
  else if (tempC_Int == 15) voice.say(spc_FIFTEEN);
  else if (tempC_Int == 16) voice.say(spc_SIXTEEN);
  else if (tempC_Int == 17) voice.say(spc_SEVENTEEN);
  else if (tempC_Int == 18) voice.say(spc_EIGHTEEN);
  else if (tempC_Int == 19) voice.say(spc_NINETEEN);
  else if (tempC_Int == 20) voice.say(spc_TWENTY);
  else if (tempC_Int == 21) {
    voice.say(spc_TWENTY);
    voice.say(spc_ONE);
  }
  else if (tempC_Int == 22) {
    voice.say(spc_TWENTY);
    voice.say(spc_TWO);
  }
  else if (tempC_Int == 23) {
    voice.say(spc_TWENTY);
    voice.say(spc_THREE);
  }
  else if (tempC_Int == 24) {
    voice.say(spc_TWENTY);
    voice.say(spc_FOUR);
  }
  else if (tempC_Int == 25) {
    voice.say(spc_TWENTY);
    voice.say(spc_FIVE);
  }
  else if (tempC_Int == 26) {
    voice.say(spc_TWENTY);
    voice.say(spc_SIX);
  }
  else if (tempC_Int == 27) {
    voice.say(spc_TWENTY);
    voice.say(spc_SEVEN);
  }
  else if (tempC_Int == 28) {
    voice.say(spc_TWENTY);
    voice.say(spc_EIGHT);
  }
  else if (tempC_Int == 29) {
    voice.say(spc_TWENTY);
    voice.say(spc_NINE);
  }
  else if (tempC_Int == 30) voice.say(spc_THIRTY);
  else if (tempC_Int == 31) {
    voice.say(spc_THIRTY);
    voice.say(spc_ONE);
  }
  else if (tempC_Int == 32) {
    voice.say(spc_THIRTY);
    voice.say(spc_TWO);
  }
  else if (tempC_Int == 33) {
    voice.say(spc_THIRTY);
    voice.say(spc_THREE);
  }
  else if (tempC_Int == 34) {
    voice.say(spc_THIRTY);
    voice.say(spc_FOUR);
  }
  else if (tempC_Int == 35) {
    voice.say(spc_THIRTY);
    voice.say(spc_FIVE);
  }
  else if (tempC_Int == 36) {
    voice.say(spc_THIRTY);
    voice.say(spc_SIX);
  }
  else if (tempC_Int == 37) {
    voice.say(spc_THIRTY);
    voice.say(spc_SEVEN);
  }
  else if (tempC_Int == 38) {
    voice.say(spc_THIRTY);
    voice.say(spc_EIGHT);
  }
  else if (tempC_Int == 39) {
    voice.say(spc_THIRTY);
    voice.say(spc_NINE);
  }
  else if (tempC_Int == 40) voice.say(spc_FOURTY);
  else if (tempC_Int == 41) {
    voice.say(spc_FOURTY);
    voice.say(spc_ONE);
  }
  else if (tempC_Int == 42) {
    voice.say(spc_FOURTY);
    voice.say(spc_TWO);
  }
  else if (tempC_Int == 43) {
    voice.say(spc_FOURTY);
    voice.say(spc_THREE);
  }
  else if (tempC_Int == 44) {
    voice.say(spc_FOURTY);
    voice.say(spc_FOUR);
  }
  else if (tempC_Int == 45) {
    voice.say(spc_FOURTY);
    voice.say(spc_FIVE);
  }
  else if (tempC_Int == 46) {
    voice.say(spc_FOURTY);
    voice.say(spc_SIX);
  }
  else if (tempC_Int == 47) {
    voice.say(spc_FOURTY);
    voice.say(spc_SEVEN);
  }
  else if (tempC_Int == 48) {
    voice.say(spc_FOURTY);
    voice.say(spc_EIGHT);
  }
  else if (tempC_Int == 49) {
    voice.say(spc_FOURTY);
    voice.say(spc_NINE);
  }
  else if (tempC_Int == 50) voice.say(spc_FIFTY);

  voice.say(Point);

  if(tempC_Frac2Int == 1) {
    voice.say(spc_ONE);
  }
  else if (tempC_Frac2Int == 2) {
    voice.say(spc_TWO);
  }
  else if (tempC_Frac2Int == 3) {
    voice.say(spc_THREE);
  }
  else if (tempC_Frac2Int== 4) {
    voice.say(spc_FOUR);
  }
  else if (tempC_Frac2Int == 5) {
    voice.say(spc_FIVE);
  }
  else if (tempC_Frac2Int== 6) {
    voice.say(spc_SIX);
  }
  else if (tempC_Frac2Int== 7) {
    voice.say(spc_SEVEN);
  }
  else if (tempC_Frac2Int == 8) {
    voice.say(spc_EIGHT);
  }
  else if (tempC_Frac2Int== 9) {
    voice.say(spc_NINE);
  }

  voice.say(spc_CELCIUS);
  voice.say(spc_DEGREE);
}

void speakHumidity(float humidity) {
  int Hum_Int = (int)humidity;
  float Hum_Frac = humidity - Hum_Int;
  int Hum_Frac2Int = (int) (Hum_Frac * 10);
//  if (Hum_Int == 0) voice.say(spc_ZERO);
//  else if (Hum_Int == 1) voice.say(spc_ONE);
//  else if (Hum_Int == 2) voice.say(spc_TWO);
//  else if (Hum_Int == 3) voice.say(spc_THREE);
//  else if (Hum_Int == 4) voice.say(spc_FOUR);
//  else if (Hum_Int == 5) voice.say(spc_FIVE);
//  else if (Hum_Int == 6) voice.say(spc_SIX);
//  else if (Hum_Int == 7) voice.say(spc_SEVEN);
//  else if (Hum_Int == 8) voice.say(spc_EIGHT);
//  else if (Hum_Int == 9) voice.say(spc_NINE);
//  else if (Hum_Int == 10) voice.say(spc_TEN);
//  else if (Hum_Int == 11) voice.say(spc_ELEVEN);
//  else if (Hum_Int == 12) voice.say(spc_TWELVE);
//  else if (Hum_Int == 13) voice.say(spc_THIRTEEN);
//  else if (Hum_Int == 14) voice.say(spc_FOURTEEN);
//  else if (Hum_Int == 15) voice.say(spc_FIFTEEN);
//  else if (Hum_Int == 16) voice.say(spc_SIXTEEN);
//  else if (Hum_Int == 17) voice.say(spc_SEVENTEEN);
//  else if (Hum_Int == 18) voice.say(spc_EIGHTEEN);
//  else if (Hum_Int == 19) voice.say(spc_NINETEEN);
//  if (Hum_Int == 20) voice.say(spc_TWENTY);
//  else if (Hum_Int == 21) {
//    voice.say(spc_TWENTY);
//    voice.say(spc_ONE);
//  }
//  else if (Hum_Int == 22) {
//    voice.say(spc_TWENTY);
//    voice.say(spc_TWO);
//  }
//  else if (Hum_Int == 23) {
//    voice.say(spc_TWENTY);
//    voice.say(spc_THREE);
//  }
//  else if (Hum_Int == 24) {
//    voice.say(spc_TWENTY);
//    voice.say(spc_FOUR);
//  }
//  else if (Hum_Int == 25) {
//    voice.say(spc_TWENTY);
//    voice.say(spc_FIVE);
//  }
//  else if (Hum_Int == 26) {
//    voice.say(spc_TWENTY);
//    voice.say(spc_SIX);
//  }
//  else if (Hum_Int == 27) {
//    voice.say(spc_TWENTY);
//    voice.say(spc_SEVEN);
//  }
//  else if (Hum_Int == 28) {
//    voice.say(spc_TWENTY);
//    voice.say(spc_EIGHT);
//  }
//  else if (Hum_Int == 29) {
//    voice.say(spc_TWENTY);
//    voice.say(spc_NINE);
//  }
  if (Hum_Int == 30) voice.say(spc_THIRTY);
  else if (Hum_Int == 31) {
    voice.say(spc_THIRTY);
    voice.say(spc_ONE);
  }
  else if (Hum_Int == 32) {
    voice.say(spc_THIRTY);
    voice.say(spc_TWO);
  }
  else if (Hum_Int == 33) {
    voice.say(spc_THIRTY);
    voice.say(spc_THREE);
  }
  else if (Hum_Int == 34) {
    voice.say(spc_THIRTY);
    voice.say(spc_FOUR);
  }
  else if (Hum_Int == 35) {
    voice.say(spc_THIRTY);
    voice.say(spc_FIVE);
  }
  else if (Hum_Int == 36) {
    voice.say(spc_THIRTY);
    voice.say(spc_SIX);
  }
  else if (Hum_Int == 37) {
    voice.say(spc_THIRTY);
    voice.say(spc_SEVEN);
  }
  else if (Hum_Int == 38) {
    voice.say(spc_THIRTY);
    voice.say(spc_EIGHT);
  }
  else if (Hum_Int == 39) {
    voice.say(spc_THIRTY);
    voice.say(spc_NINE);
  }
  else if (Hum_Int == 40) voice.say(spc_FOURTY);
  else if (Hum_Int == 41) {
    voice.say(spc_FOURTY);
    voice.say(spc_ONE);
  }
  else if (Hum_Int == 42) {
    voice.say(spc_FOURTY);
    voice.say(spc_TWO);
  }
  else if (Hum_Int == 43) {
    voice.say(spc_FOURTY);
    voice.say(spc_THREE);
  }
  else if (Hum_Int == 44) {
    voice.say(spc_FOURTY);
    voice.say(spc_FOUR);
  }
  else if (Hum_Int == 45) {
    voice.say(spc_FOURTY);
    voice.say(spc_FIVE);
  }
  else if (Hum_Int == 46) {
    voice.say(spc_FOURTY);
    voice.say(spc_SIX);
  }
  else if (Hum_Int == 47) {
    voice.say(spc_FOURTY);
    voice.say(spc_SEVEN);
  }
  else if (Hum_Int == 48) {
    voice.say(spc_FOURTY);
    voice.say(spc_EIGHT);
  }
  else if (Hum_Int == 49) {
    voice.say(spc_FOURTY);
    voice.say(spc_NINE);
  }
  else if (Hum_Int == 50) voice.say(spc_FIFTY);
  else if (Hum_Int == 51) {
    voice.say(spc_FIFTY);
    voice.say(spc_ONE);
  }
  else if (Hum_Int == 52) {
    voice.say(spc_FIFTY);
    voice.say(spc_TWO);
  }
  else if (Hum_Int == 53) {
    voice.say(spc_FIFTY);
    voice.say(spc_THREE);
  }
  else if (Hum_Int == 54) {
    voice.say(spc_FIFTY);
    voice.say(spc_FOUR);
  }
  else if (Hum_Int == 55) {
    voice.say(spc_FIFTY);
    voice.say(spc_FIVE);
  }
  else if (Hum_Int == 56) {
    voice.say(spc_FIFTY);
    voice.say(spc_SIX);
  }
  else if (Hum_Int == 57) {
    voice.say(spc_FIFTY);
    voice.say(spc_SEVEN);
  }
  else if (Hum_Int == 58) {
    voice.say(spc_FIFTY);
    voice.say(spc_EIGHT);
  }
  else if (Hum_Int == 59) {
    voice.say(spc_FIFTY);
    voice.say(spc_NINE);
  }
  else if (Hum_Int == 60) voice.say(spc_SIXTY);
  else if (Hum_Int == 61) {
    voice.say(spc_SIXTY);
    voice.say(spc_ONE);
  }
  else if (Hum_Int == 62) {
    voice.say(spc_SIXTY);
    voice.say(spc_TWO);
  }
  else if (Hum_Int == 63) {
    voice.say(spc_SIXTY);
    voice.say(spc_THREE);
  }
  else if (Hum_Int == 64) {
    voice.say(spc_SIXTY);
    voice.say(spc_FOUR);
  }
  else if (Hum_Int == 65) {
    voice.say(spc_SIXTY);
    voice.say(spc_FIVE);
  }
  else if (Hum_Int == 66) {
    voice.say(spc_SIXTY);
    voice.say(spc_SIX);
  }
  else if (Hum_Int == 67) {
    voice.say(spc_SIXTY);
    voice.say(spc_SEVEN);
  }
  else if (Hum_Int == 68) {
    voice.say(spc_SIXTY);
    voice.say(spc_EIGHT);
  }
  else if (Hum_Int == 69) {
    voice.say(spc_SIXTY);
    voice.say(spc_NINE);
  }
  else if (Hum_Int == 70) voice.say(spc_SEVENTY);
  else if (Hum_Int == 71) {
    voice.say(spc_SEVENTY);
    voice.say(spc_ONE);
  }
  else if (Hum_Int == 72) {
    voice.say(spc_SEVENTY);
    voice.say(spc_TWO);
  }
  else if (Hum_Int == 73) {
    voice.say(spc_SEVENTY);
    voice.say(spc_THREE);
  }
  else if (Hum_Int == 74) {
    voice.say(spc_SEVENTY);
    voice.say(spc_FOUR);
  }
  else if (Hum_Int == 75) {
    voice.say(spc_SEVENTY);
    voice.say(spc_FIVE);
  }
  else if (Hum_Int == 76) {
    voice.say(spc_SEVENTY);
    voice.say(spc_SIX);
  }
  else if (Hum_Int == 77) {
    voice.say(spc_SEVENTY);
    voice.say(spc_SEVEN);
  }
  else if (Hum_Int == 78) {
    voice.say(spc_SEVENTY);
    voice.say(spc_EIGHT);
  }
  else if (Hum_Int == 79) {
    voice.say(spc_SEVENTY);
    voice.say(spc_NINE);
  }
  else if (Hum_Int == 80) voice.say(spc_EIGHTY);
  else if(Hum_Int == 81) {
    voice.say(spc_EIGHTY);
    voice.say(spc_ONE);
  }
  else if(Hum_Int == 82) {
    voice.say(spc_EIGHTY);
    voice.say(spc_TWO);
  }
  else if(Hum_Int == 83) {
    voice.say(spc_EIGHTY);
    voice.say(spc_THREE);
  }
  else if(Hum_Int == 84) {
    voice.say(spc_EIGHTY);
    voice.say(spc_FOUR);
  }
  else if(Hum_Int == 85) {
    voice.say(spc_EIGHTY);
    voice.say(spc_FIVE);
  }
  else if(Hum_Int == 86) {
    voice.say(spc_EIGHTY);
    voice.say(spc_SIX);
  }
  else if(Hum_Int == 87) {
    voice.say(spc_EIGHTY);
    voice.say(spc_SEVEN);
  }
  else if(Hum_Int == 88) {
    voice.say(spc_EIGHTY);
    voice.say(spc_EIGHT);
  }
  else if(Hum_Int == 89) {
    voice.say(spc_EIGHTY);
    voice.say(spc_NINE);
  }
//  else if(Hum_Int == 90) voice.say(spc_NINETY);
//  else if(Hum_Int == 91) {
//    voice.say(spc_NINETY);
//    voice.say(spc_ONE);
//  }
//  else if(Hum_Int == 92) {
//    voice.say(spc_NINETY);
//    voice.say(spc_TWO);
//  }
//  else if(Hum_Int == 93) {
//    voice.say(spc_NINETY);
//    voice.say(spc_THREE);
//  }
//  else if(Hum_Int == 94) {
//    voice.say(spc_NINETY);
//    voice.say(spc_FOUR);
//  }
//  else if(Hum_Int == 95) {
//    voice.say(spc_NINETY);
//    voice.say(spc_FIVE);
//  }
//  else if(Hum_Int == 96) {
//    voice.say(spc_NINETY);
//    voice.say(spc_SIX);
//  }
//  else if(Hum_Int == 97) {
//    voice.say(spc_NINETY);
//    voice.say(spc_SEVEN);
//  }
//  else if(Hum_Int == 98) {
//    voice.say(spc_NINETY);
//    voice.say(spc_EIGHT);
//  }
//  else if(Hum_Int == 99) {
//    voice.say(spc_NINETY);
//    voice.say(spc_NINE);
//  }
//  else if (Hum_Int == 100) voice.say(spc_HUNDRED);

  voice.say(Point);

  if(Hum_Frac2Int == 1) {
    voice.say(spc_ONE);
  }
  else if (Hum_Frac2Int == 2) {
    voice.say(spc_TWO);
  }
  else if (Hum_Frac2Int == 3) {
    voice.say(spc_THREE);
  }
  else if (Hum_Frac2Int== 4) {
    voice.say(spc_FOUR);
  }
  else if (Hum_Frac2Int == 5) {
    voice.say(spc_FIVE);
  }
  else if (Hum_Frac2Int== 6) {
    voice.say(spc_SIX);
  }
  else if (Hum_Frac2Int== 7) {
    voice.say(spc_SEVEN);
  }
  else if (Hum_Frac2Int == 8) {
    voice.say(spc_EIGHT);
  }
  else if (Hum_Frac2Int== 9) {
    voice.say(spc_NINE);
  }

  voice.say(spc_PERCENT);
}
